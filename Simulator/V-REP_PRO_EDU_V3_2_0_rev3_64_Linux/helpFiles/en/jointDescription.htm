<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Joint types and operation</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Joint types and operation</h1>


<p>Compared to another <a href="objects.htm">object</a>, a <a href="joints.htm">joint</a> has two reference frames (visible only if the joint is selected). The first one is the regular reference frame that is fixed and that other objects also have. The second reference frame is not fixed, and will move relative to the first reference frame depending on the joint position (or joint value) that defines its configuration. 4 types of joints are supported:<br>
</p>

<p align=center><img src="images/jointDescription1.jpg"></p>
<p class=imageLabel>[Revolute joint, prismatic joint, screw and spherical joint]</p>
<br>

<li><strong>Revolute joints</strong>: revolute joints have one DoF and are used to describe rotational movements (with 1 DoF) between objects. Their configuration is defined by one value that represents the amount of rotation about their first reference frame's z-axis. They can be used as passive joints, or as active joints (motors). Their position is given in degrees or radians (see the <a href="settings.htm">user settings dialog</a> for the unit selection).<br>
</li>

<li><strong>Prismatic joints</strong>: prismatic joints have one DoF and are used to describe translational movements between objects. Their configuration is defined by one value that represents the amount of translation along their first reference frame's z-axis. They can be used as passive joints, or as active joints (motors). Their position is given in meters or millimeters (see the <a href="settings.htm">user settings dialog</a> for the unit selection).<br>
</li>

<li><strong>Screws</strong>: screws, which can be seen as a combination of revolute joints and prismatic joints (with linked values), have one DoF and are used to describe a movement similar to a screw. A pitch parameter defines the amount of translation for a given amount of rotation. A screw configuration is defined by one value that represents the amount of rotation about its first reference frame's z-axis. Screws can be used as passive joints, or as active joints (motors). Their position is given in degrees or radians (see the <a href="settings.htm">user settings dialog</a> for the unit selection).<br>
</li>

<li><strong>Spherical joints</strong>: spherical joints have three DoF and are used to describe rotational movements (with 3 DoF) between objects. Their configuration is defined by three values that represent the amount of rotation around their first reference frame's x-, y- and z-axis. The three values that define a spherical joint's configuration are specified as <a href="eulerAngles.htm">Euler angles</a>. In some situations, a spherical joint can be thought of as 3 concurrent and orthogonal to each other joints, that are parented in a hierarchy-chain. The analogy is however only valid while all revolute joints keep an orientation distinct from any of the two others: indeed, should two joints come close to coincide, a singular situation might appear and the mechanism might lose one DoF. This does never happen with spherical joints that are internally handled to avoid this kind of situation. Spherical joints are always passive joints, and cannot act as motors. </li>

<p align=center><img src="images/jointDescription2.jpg"></p>
<p class=imageLabel>[Two equivalent mechanisms (in this configuration): spherical joint (left) and 3 revolute joints (right)]</p>
<br>


<p align=center><img src="images/jointDescription3.jpg"></p>
<p class=imageLabel>[Two non-equivalent mechanisms: the right configuration is close to a singularity]</p>
<br>

<p>A joint is used to allow for a relative movement between its parent and its children. When a parent-child relationship is built between a joint and an object, the object is attached to the joint's second reference frame, thus, a change of the joint's configuration (intrinsic position) will directly be reflected onto its children. New joints can be added to a <a href="scenes.htm">scene</a> with [Menu bar --&gt; Add --&gt; Joints].
</p>

<p>A joint can be in one of following control modes:
</p>

<li><strong>Passive mode</strong>: in this mode the joint is not directly controlled and will act as a fixed link. The user can however change the joint's position with appropriate <a href="apisOverview.htm">API</a> function calls (e.g. <a href="apiFunctions.htm#simSetJointPosition">simSetJointPositon</a> or <a href="apiFunctions.htm#simSetSphericalJointMatrix">simSetSphericalJointMatrix</a>).<br>
</li>

<li><strong>Inverse kinematics mode</strong>: in this mode, the joint acts as a passive joint, but is used (adjusted) during <a href="inverseKinematicsModule.htm">inverse kinematics calculations</a> or <a href="geometricConstraintSolverModule.htm">geometric constraint solver calculations</a>; this is the default mode.<br>
</li>

<li><strong>Dependent mode</strong>: in this mode, the joint position is directly linked (dependent) to another joint position through a linear equation.<br>
</li>

<li><strong>Motion mode</strong>: in this mode, the joint acts as a motor; the motion profile is a linear velocity profile, determined by an acceleration factor and a target velocity parameter as shown in following figure:
</li>

<p align=center><img src="images/jointDescription4.jpg"></p>
<p class=imageLabel>[Joint velocity profile]</p>
<br>



<li><strong>Torque or force mode</strong>: in this mode, the joint is simulated by the <a href="dynamicsModule.htm">dynamics module</a>, if and only if it is dynamically enabled (refer to the section on <a href="designingDynamicSimulations.htm">designing dynamic simulations</a> for more information). When dynamically enabled, a joint can be free or controlled in Force/torque, in velocity or in position (PID control). Screws cannot (yet) be operated in torque or force mode (however it is possible to obtain a similar behaviour by linking a revolute and prismatic joint programmatically), and spherical joints can only be free in torque or force mode.
</li>

<li class=tabTab>When the joint motor is disabled, the joint is free and only constrained by its limits.
</li>

<li class=tabTab>When the joint motor is enabled and the position control is disabled, then the joint will try to reach the desired target velocity given the maximum torque/force it is capable to deliver. When that maximum torque/force is very high, the target velocity is instantaneously reached and the joint operates in velocity control, otherwise it operates at the specified torque/force until the desired target velocity is reached (torque/force control).
</li>

<li class=tabTab>When the joint motor is enabled and the position control is enabled, then PID parameters will try to drive the joint to the desired target position. Two PID control methods are supported:
</li>

<li class=fourTabs>PID control by adjusting the joint velocity (regular position control):
</li>

<p align=center><img src="images/jointDescription5.jpg"></p>
<br>


<li class=fourTabs>PID control by modulating the joint torque/force (can be used to model springs):
</li>

<p align=center><img src="images/jointDescription6.jpg"></p>
<br>



<p>When the joint is in passive mode, inverse kinematics mode, dependent mode or motion mode, it can optionally also be operated in a hybrid fashion: hybrid operation allows the joint to operate in a regular way, but additionally, just before <a href="dynamicsModule.htm">dynamics calculations</a>, the current joint position will be copied to the target joint position, and then, during dynamics calculations, the joint will be handled as a motor in position control (if and only if it is dynamically enabled (refer to the section on <a href="designingDynamicSimulations.htm">designing dynamic simulations</a> for more information)). This feature allows for instance to control the leg of a humanoid robot by simply specifying the desired foot position (as an inverse kinematics task); the corresponding calculated joint positions will then be applied as position control values for the leg dynamic motion.
</p>

<br>
<h3 class=recommendedTopics>Recommended topics</h3>
<li><a href="joints.htm">Joints</a></li>
<li><a href="jointProperties.htm">Joint properties</a></li>
<li><a href="inverseKinematicsModule.htm">Inverse kinematics module</a></li>
<li><a href="geometricConstraintSolverModule.htm">Geometric constraint solver module</a></li>
<li><a href="dynamicsModule.htm">Dynamics module</a></li>
<li><a href="designingDynamicSimulations.htm">Designing dynamic simulations</a></li>

<br>
<br>

 </tr>
</table> 
</div>  
  
  
</body>

</html>
